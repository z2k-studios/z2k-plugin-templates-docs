"use strict";(self.webpackChunkz_2_k_plugin_templates_docs=self.webpackChunkz_2_k_plugin_templates_docs||[]).push([[3295],{3645:(e,d,t)=>{t.r(d),t.d(d,{assets:()=>c,contentTitle:()=>r,default:()=>o,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"reference-manual/Z2K Built-In Template Fields","title":"Z2K Built-In Template Fields","description":"Z2K includes a number of pre-defined [[~Z2K Templates - Reference Manual|Template Field]] names that will be [[Z2K Template Field Types#Template Field Type Built-In Fields|automatically]] filled in whenever the template is created.","source":"@site/docs/reference-manual/Z2K Built-In Template Fields.md","sourceDirName":"reference-manual","slug":"/reference-manual/Z2K Built-In Template Fields","permalink":"/z2k-plugin-templates-docs/docs/reference-manual/Z2K Built-In Template Fields","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/reference-manual/Z2K Built-In Template Fields.md","tags":[],"version":"current","frontMatter":{},"sidebar":"z2k-templates-docs","previous":{"title":"5. Z2K Template Field Naming Conventions","permalink":"/z2k-plugin-templates-docs/docs/reference-manual/Z2K Template Field Naming Conventions"},"next":{"title":"7.1 Z2K Template Field Data Default Formatting","permalink":"/z2k-plugin-templates-docs/docs/reference-manual/Z2K Template Field Data Default Formatting"}}');var i=t(4848),s=t(8453);const l={},r="Contents",c={},a=[{value:"Time and Date Formatting",id:"time-and-date-formatting",level:2}];function h(e){const d={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(d.p,{children:["Z2K includes a number of pre-defined ",(0,i.jsx)(d.a,{className:"internal new",href:"./~Z2K%20Templates%20-%20Reference%20Manual%7CTemplate%20Field",children:"~Z2K Templates - Reference Manual|Template Field"})," names that will be ",(0,i.jsx)(d.a,{className:"internal new",href:"./Z2K%20Template%20Field%20Types%23Template%20Field%20Type%20Built-In%20Fields%7Cautomatically",children:"Z2K Template Field Types#Template Field Type Built-In Fields|automatically"})," filled in whenever the template is created."]}),"\n",(0,i.jsx)(d.header,{children:(0,i.jsx)(d.h1,{id:"contents",children:"Contents"})}),"\n",(0,i.jsx)(d.p,{children:"The following types of built-in fields are available:"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.a,{className:"internal new",href:"./%23Built-In%20Template%20Fields%20Date%20and%20Time%7CDate%20and%20Time",children:"#Built-In Template Fields Date and Time|Date and Time"})," - built-in date and time fields"]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.a,{className:"internal new",href:"./%23Built-In%20Template%20Fields%20Card%20Data%7CCard%20Data",children:"#Built-In Template Fields Card Data|Card Data"})," - built-in fields associated with a card"]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.a,{className:"internal new",href:"./%23Built-In%20Template%20Fields%20Card%20References%7CCard%20References",children:"#Built-In Template Fields Card References|Card References"})," - built-in links to other cards in the Z2K vault."]}),"\n"]}),"\n",(0,i.jsx)(d.hr,{}),"\n",(0,i.jsx)(d.h1,{id:"note-on-field-naming-conventions",children:"Note on Field Naming Conventions"}),"\n",(0,i.jsx)(d.p,{children:(0,i.jsx)(d.em,{children:"Note: In general, there is a naming convention used in Z2K to distinguish built-in fields from user specified fields. Built-in template fields all begin with a lower case letter, while we encourage you to denote user specified fields by beginning them with an uppercase letter."})}),"\n",(0,i.jsx)(d.hr,{}),"\n",(0,i.jsx)(d.h1,{id:"built-in-template-fields-date-and-time",children:"Built-In Template Fields: Date and Time"}),"\n",(0,i.jsx)(d.p,{children:"The following built-in date and time template fields can be used in templates:"}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Field"}),(0,i.jsx)(d.th,{children:"Value to be inserted"}),(0,i.jsxs)(d.th,{children:["Example ",(0,i.jsx)(d.em,{children:"(assuming today is 2026-01-09)"})]})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{date}}"})}),(0,i.jsx)(d.td,{children:"Today's date (*1)"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-09"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{time}}"})}),(0,i.jsxs)(d.td,{children:["Current time in the format ",(0,i.jsx)(d.code,{children:"HH:mm"})," (*1)"]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"15:23"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{today}}"})}),(0,i.jsxs)(d.td,{children:["Today's date (same as ",(0,i.jsx)(d.code,{children:"{{date}}"}),")"]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-09"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{yesterday}}"})}),(0,i.jsx)(d.td,{children:"Yesterday's date"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-08"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{tomorrow}}"})}),(0,i.jsx)(d.td,{children:"Tomorrow's date"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-10"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{timestamp}}"})}),(0,i.jsxs)(d.td,{children:["A full zettelkasten timestamp of the format ",(0,i.jsx)(d.code,{children:"YYYYMMDDHHmmss"})]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"20260109185559"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{dayOfWeek}}"})}),(0,i.jsxs)(d.td,{children:["The name of the day of the week with the format ",(0,i.jsx)(d.code,{children:"dddd"})]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Friday"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{weekNum}}"})}),(0,i.jsxs)(d.td,{children:["The week number with the format ",(0,i.jsx)(d.code,{children:"YYYY-[w]ww"})]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2024-w02"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{yearMonth}}"})}),(0,i.jsxs)(d.td,{children:["The date with the format ",(0,i.jsx)(d.code,{children:"YYYY-MM"})]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2025-03"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{yearMonthName}}"})}),(0,i.jsxs)(d.td,{children:["The date with the format ",(0,i.jsx)(d.code,{children:"YYYY-MM MMMM"})]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2025-09 September"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{yearQuarter}}"})}),(0,i.jsxs)(d.td,{children:["The current year and quarter with the format ",(0,i.jsx)(d.code,{children:"YYYY-[Q]Q"})]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2025-Q1"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsxs)(d.td,{children:["(*1) The ",(0,i.jsx)(d.code,{children:"{{date}}"})," and ",(0,i.jsx)(d.code,{children:"{{time}}"})," built-in fields perform identically to Obsidian's predefinited template variables with the same name."]}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{})]})]})]}),"\n",(0,i.jsx)(d.h2,{id:"time-and-date-formatting",children:"Time and Date Formatting"}),"\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:["In keeping with Obsidian formatting, a optional time format string can be added with a ",(0,i.jsx)(d.code,{children:":"})," followed by a string of\xa0",(0,i.jsx)(d.a,{href:"https://momentjs.com/docs/#/displaying/format/",children:"Moment.js format tokens"}),". This formatting ability applies only to date and time fields."]}),"\n",(0,i.jsxs)(d.li,{children:["Examples:","\n",(0,i.jsxs)(d.ul,{children:["\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"{{timestamp:YYYYMMDDhhmm}}"})," would result in ",(0,i.jsx)(d.code,{children:"202601091314"})]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"{{date:YYYY-MM}}"})," would result in ",(0,i.jsx)(d.code,{children:"2026-01"})]}),"\n",(0,i.jsxs)(d.li,{children:[(0,i.jsx)(d.code,{children:"{{dayOfWeek:ddd}}"})," would result in ",(0,i.jsx)(d.code,{children:"Fri"})]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(d.li,{children:["For more details and more advanced formatting, see ",(0,i.jsx)(d.a,{className:"internal new",href:"./Z2K%20Template%20Field%20Custom%20Formatting%7CDate%20and%20String%20Formatting",children:"Z2K Template Field Custom Formatting|Date and String Formatting"})]}),"\n"]}),"\n",(0,i.jsx)(d.hr,{}),"\n",(0,i.jsx)(d.h1,{id:"built-in-template-fields-card-data",children:"Built-In Template Fields: Card Data"}),"\n",(0,i.jsx)(d.p,{children:"Z2K supports a number of predefined built-in template fields regarding the current card."}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Field"}),(0,i.jsx)(d.th,{children:"Value to be inserted"}),(0,i.jsx)(d.th,{children:"Example"})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{title}}"})}),(0,i.jsx)(d.td,{children:"The title of this card (*1)"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Leaves of Grass - Walt Whitman"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{cardTitle}}"})}),(0,i.jsxs)(d.td,{children:["The title of this card (same as ",(0,i.jsx)(d.code,{children:"{{title}}"}),")"]}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Leaves of Grass - Walt Whitman"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{cardAtom}}"})}),(0,i.jsx)(d.td,{children:"The atom type of this card"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Thoughts"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{cardTemplateName}}"})}),(0,i.jsx)(d.td,{children:"The name of the template used for this card"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Information - Book"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{cardCreator}}"})}),(0,i.jsx)(d.td,{children:"The name of the card creator"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Your Name"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{cardType}}"})}),(0,i.jsx)(d.td,{children:"The Z2K Card Type"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Ontology"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{cardSourceType}}"})}),(0,i.jsx)(d.td,{children:"The Z2K Card Source Type"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"InternalThought"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{templateName}}"})}),(0,i.jsx)(d.td,{children:"The name of the Template used to create this card"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Book Template"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{sourceText}}"})}),(0,i.jsx)(d.td,{children:'This field is used to show where in the template file to insert raw text data that was provided to the Template Plugin. If missing, it appends the provided text to the bottom of the file. This is used a) when using the "Create Card from Text" command on selected text, and b) when passing additional data via JSON or URI'}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"A paragraph of text that will be inserted into the template."})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsxs)(d.td,{children:["(*1) The ",(0,i.jsx)(d.code,{children:"{{title}}"})," built-in fields perform identically to Obsidian's predefined template variables with the same name."]}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{})]})]})]}),"\n",(0,i.jsx)(d.hr,{}),"\n",(0,i.jsx)(d.h1,{id:"built-in-template-fields-card-references",children:"Built-In Template Fields: Card References"}),"\n",(0,i.jsx)(d.p,{children:"You can also specify references to other well known cards in the Z2K vault."}),"\n",(0,i.jsxs)(d.p,{children:["Note: these will not be wikilinked unless you use the ",(0,i.jsx)(d.code,{children:"wikilink"})," helper (see ",(0,i.jsx)(d.a,{className:"internal new",href:"./Built-In%20Helper%20Functions%7CPredefined%20Helpers",children:"Built-In Helper Functions|Predefined Helpers"}),")."]}),"\n",(0,i.jsxs)(d.table,{children:[(0,i.jsx)(d.thead,{children:(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.th,{children:"Field"}),(0,i.jsx)(d.th,{children:"Value to be inserted"}),(0,i.jsxs)(d.th,{children:["Example ",(0,i.jsx)(d.em,{children:"(assuming today is 2026-01-09)"})]})]})}),(0,i.jsxs)(d.tbody,{children:[(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{todayLog}}"})}),(0,i.jsx)(d.td,{children:"The name of today's log file"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-09 - Log"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{yesterdayLog}}"})}),(0,i.jsx)(d.td,{children:"The name of yesterday's log file"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-08 - Log"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{tomorrowLog}}"})}),(0,i.jsx)(d.td,{children:"The name of tomorrow's log file"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-10 - Log"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{todayJournal}}"})}),(0,i.jsx)(d.td,{children:"The name of today's journal file"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-09"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{yesterdayJournal}}"})}),(0,i.jsx)(d.td,{children:"The name of yesterday's journal file"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-08"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{tomorrowJournal}}"})}),(0,i.jsx)(d.td,{children:"The name of tomorrow's journal file"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"2026-01-10"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{}),(0,i.jsx)(d.td,{})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{creatorRootCard}}"})}),(0,i.jsx)(d.td,{children:"The name of the root creator card"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"Your Name"})})]}),(0,i.jsxs)(d.tr,{children:[(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"{{inboxCard}}"})}),(0,i.jsx)(d.td,{children:"The name of the inbox card"}),(0,i.jsx)(d.td,{children:(0,i.jsx)(d.code,{children:"~Inbox"})})]})]})]})]})}function o(e={}){const{wrapper:d}={...(0,s.R)(),...e.components};return d?(0,i.jsx)(d,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,d,t)=>{t.d(d,{R:()=>l,x:()=>r});var n=t(6540);const i={},s=n.createContext(i);function l(e){const d=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(d):{...d,...e}},[d,e])}function r(e){let d;return d=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(s.Provider,{value:d},e.children)}}}]);